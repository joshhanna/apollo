//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.04.08 at 05:21:12 PM EDT 
//


package edu.pitt.apollo.types.v3_0_0;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for InfectionStateEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="InfectionStateEnum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="susceptible"/&gt;
 *     &lt;enumeration value="greaterThanOrEqualToId50Exposure"/&gt;
 *     &lt;enumeration value="latent"/&gt;
 *     &lt;enumeration value="infectious"/&gt;
 *     &lt;enumeration value="recovered"/&gt;
 *     &lt;enumeration value="immuneAndActsLikeImmune"/&gt;
 *     &lt;enumeration value="immuneButActsLikeNotImmune"/&gt;
 *     &lt;enumeration value="newly_sick"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "InfectionStateEnum")
@XmlEnum
public enum InfectionStateEnum {

    @XmlEnumValue("susceptible")
    SUSCEPTIBLE("susceptible"),
    @XmlEnumValue("greaterThanOrEqualToId50Exposure")
    GREATER_THAN_OR_EQUAL_TO_ID_50_EXPOSURE("greaterThanOrEqualToId50Exposure"),
    @XmlEnumValue("latent")
    LATENT("latent"),
    @XmlEnumValue("infectious")
    INFECTIOUS("infectious"),
    @XmlEnumValue("recovered")
    RECOVERED("recovered"),
    @XmlEnumValue("immuneAndActsLikeImmune")
    IMMUNE_AND_ACTS_LIKE_IMMUNE("immuneAndActsLikeImmune"),
    @XmlEnumValue("immuneButActsLikeNotImmune")
    IMMUNE_BUT_ACTS_LIKE_NOT_IMMUNE("immuneButActsLikeNotImmune"),
    @XmlEnumValue("newly_sick")
    NEWLY_SICK("newly_sick");
    private final String value;

    InfectionStateEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static InfectionStateEnum fromValue(String v) {
        for (InfectionStateEnum c: InfectionStateEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
